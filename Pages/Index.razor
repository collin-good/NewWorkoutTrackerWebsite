@page "/"

@using WorkoutTrackerWebsite.Controllers
@using WorkoutTrackerWebsite.Models
@inject WorkoutController WorkoutController

<title>workout list</title>
<style>
    site.css
</style>

<body>
    <button @onclick="(() => 
        {
        isUpdatingWorkout = false;
        showingAddWorkoutDialog = true;
        })">Add Workout</button>

    <h1>Previous workouts</h1>
    <table class="workout-table">
        <thead>
            <th>Workout Name</th>
            <th>Date</th>
            <th>Weight</th>
            <th>Sets</th>
            <th>Total Reps</th>
            <th></th>
            <th></th>
        </thead>
        <tbody>
            @if (workouts is not null && workouts.Count() is not 0)
            {
                foreach (Workout? workout in workouts)
                {
                    <tr>
                        <td>@workout.Date.ToString("d")</td>
                        <td>@workout.Name</td>
                        <td>@workout.Weight</td>
                        <td>@workout.Sets</td>
                        <td>@workout.Reps</td>
                        <td>
                            <button @onclick="(() => {
                            this.workout = workout;
                            isUpdatingWorkout = true;
                            showingAddWorkoutDialog = true;
                            })">Edit</button></td>
                        <td>
                            <button @onclick="(() => {WorkoutController.DeleteWorkout(workout.Id);
                                UpdateWorkoutList();})">Delete</button>
                            </td>
                    </tr>
                }
            }
            else
            {
                <p>No workouts avalible yet</p>
            }
        </tbody>
    </table>
</body>


@if (showingAddWorkoutDialog)
{
    <AddWorkoutDialog
    WorkoutParam=workout
    OnConfirmWorkoutAdd="AddWorkoutToDatabase"
    OnCancelWorkoutAdd="CancelAddWorkoutDialog"></AddWorkoutDialog>
}

@code {
    bool showingAddWorkoutDialog = false;
    bool isUpdatingWorkout = false;
    Workout workout = new Workout();
    List<Workout>? workouts { get; set; } = new();

    protected override void OnInitialized()
    {
        workout = new Workout();
        UpdateWorkoutList();
    }

    public void AddWorkoutToDatabase(Workout workout)
    {
        //! Workout additions and updates are not being sent to the database
        if (isUpdatingWorkout)
        {
            WorkoutController.UpdateExistingWorkout(workout.Id, workout);
        }
        else
        {
            WorkoutController.CreateNewWorkout(workout);
        }

        UpdateWorkoutList();
        showingAddWorkoutDialog = false;
    }
    public void CancelAddWorkoutDialog()
    {
        showingAddWorkoutDialog = false;
        workout = new Workout();
    }
    public async void UpdateWorkoutList()
    {
        workouts = (await WorkoutController.GetAll()).Value;
    }
}